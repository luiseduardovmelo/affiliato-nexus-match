// This file is automatically generated. Do not edit it directly.
export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      affiliate_specs: {
        Row: {
          user_id: string
          description: string | null
          traffic_sources: string[] | null
          commission_model: string | null
          work_languages: string[] | null
          charged_value: string | null
          basic_info: string | null
          current_operators: string | null
          previous_operators: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          user_id: string
          description?: string | null
          traffic_sources?: string[] | null
          commission_model?: string | null
          work_languages?: string[] | null
          charged_value?: string | null
          basic_info?: string | null
          current_operators?: string | null
          previous_operators?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          user_id?: string
          description?: string | null
          traffic_sources?: string[] | null
          commission_model?: string | null
          work_languages?: string[] | null
          charged_value?: string | null
          basic_info?: string | null
          current_operators?: string | null
          previous_operators?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "affiliate_specs_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: true
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      credits: {
        Row: {
          id: string
          user_id: string
          delta: number
          balance_after: number
          type: string
          description: string | null
          related_reveal_id: string | null
          stripe_payment_intent_id: string | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          delta: number
          balance_after: number
          type: string
          description?: string | null
          related_reveal_id?: string | null
          stripe_payment_intent_id?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          delta?: number
          balance_after?: number
          type?: string
          description?: string | null
          related_reveal_id?: string | null
          stripe_payment_intent_id?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "credits_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      operator_specs: {
        Row: {
          user_id: string
          description: string | null
          monthly_volume: string | null
          commission_models: string[] | null
          payment_schedule: string | null
          accepted_countries: string[] | null
          platform_type: string | null
          accepts_retargeting: boolean | null
          installs_postback: boolean | null
          white_label: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          user_id: string
          description?: string | null
          monthly_volume?: string | null
          commission_models?: string[] | null
          payment_schedule?: string | null
          accepted_countries?: string[] | null
          platform_type?: string | null
          accepts_retargeting?: boolean | null
          installs_postback?: boolean | null
          white_label?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          user_id?: string
          description?: string | null
          monthly_volume?: string | null
          commission_models?: string[] | null
          payment_schedule?: string | null
          accepted_countries?: string[] | null
          platform_type?: string | null
          accepts_retargeting?: boolean | null
          installs_postback?: boolean | null
          white_label?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "operator_specs_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: true
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      reveal_logs: {
        Row: {
          id: string
          revealer_id: string
          target_id: string
          cost_credits: number
          revealed_at: string
        }
        Insert: {
          id?: string
          revealer_id: string
          target_id: string
          cost_credits: number
          revealed_at?: string
        }
        Update: {
          id?: string
          revealer_id?: string
          target_id?: string
          cost_credits?: number
          revealed_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "reveal_logs_revealer_id_fkey"
            columns: ["revealer_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "reveal_logs_target_id_fkey"
            columns: ["target_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      reviews: {
        Row: {
          id: string
          reviewer_id: string
          target_id: string
          rating: number
          comment: string | null
          is_verified: boolean
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          reviewer_id: string
          target_id: string
          rating: number
          comment?: string | null
          is_verified?: boolean
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          reviewer_id?: string
          target_id?: string
          rating?: number
          comment?: string | null
          is_verified?: boolean
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "reviews_reviewer_id_fkey"
            columns: ["reviewer_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "reviews_target_id_fkey"
            columns: ["target_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      users: {
        Row: {
          id: string
          email: string
          password_hash: string
          role: "afiliado" | "operador" | "admin"
          status: "active" | "inactive" | "suspended" | "banned"
          display_name: string | null
          country: string | null
          phone: string
          description: string | null
          language: string | null
          telegram: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          email: string
          password_hash: string
          role: "afiliado" | "operador" | "admin"
          status?: "active" | "inactive" | "suspended" | "banned"
          display_name?: string | null
          country?: string | null
          phone: string
          description?: string | null
          language?: string | null
          telegram?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          email?: string
          password_hash?: string
          role?: "afiliado" | "operador" | "admin"
          status?: "active" | "inactive" | "suspended" | "banned"
          display_name?: string | null
          country?: string | null
          phone?: string
          description?: string | null
          language?: string | null
          telegram?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

export type Tables<
  PublicTableNameOrOptions extends
    | keyof (Database["public"]["Tables"] & Database["public"]["Views"])
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
        Database[PublicTableNameOrOptions["schema"]]["Views"])
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
      Database[PublicTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R
    }
    ? R
    : never
  : PublicTableNameOrOptions extends keyof (Database["public"]["Tables"] &
        Database["public"]["Views"])
    ? (Database["public"]["Tables"] &
        Database["public"]["Views"])[PublicTableNameOrOptions] extends {
        Row: infer R
      }
      ? R
      : never
    : never

export type TablesInsert<
  PublicTableNameOrOptions extends
    | keyof Database["public"]["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Insert: infer I
    }
    ? I
    : never
  : PublicTableNameOrOptions extends keyof Database["public"]["Tables"]
    ? Database["public"]["Tables"][PublicTableNameOrOptions] extends {
        Insert: infer I
      }
      ? I
      : never
    : never

export type TablesUpdate<
  PublicTableNameOrOptions extends
    | keyof Database["public"]["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Update: infer U
    }
    ? U
    : never
  : PublicTableNameOrOptions extends keyof Database["public"]["Tables"]
    ? Database["public"]["Tables"][PublicTableNameOrOptions] extends {
        Update: infer U
      }
      ? U
      : never
    : never

export type Enums<
  PublicEnumNameOrOptions extends
    | keyof Database["public"]["Enums"]
    | { schema: keyof Database },
  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicEnumNameOrOptions["schema"]]["Enums"]
    : never = never,
> = PublicEnumNameOrOptions extends { schema: keyof Database }
  ? Database[PublicEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : PublicEnumNameOrOptions extends keyof Database["public"]["Enums"]
    ? Database["public"]["Enums"][PublicEnumNameOrOptions]
    : never

export type UserProfile = Tables<'users'>